openapi: 3.0.3
info:
  version: '3.0'
  title: Approver APIs
  contact:
    name: Integrations
    email: support@fylehq.com
servers:
  - url: 'https://accounts.fylehq.com'
    description: Live Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            approver.*: Grant all Approver actions
  schemas:
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    report_approvals:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              description: |
                Id of a report which is to be approved.
              example: rphs782hj245
      required:
        - data
    report_id:
      type: string
      maxLength: 255
      description: |
        This id provided by Fyle to uniquely identify a report.
        This id is always prefixed with `rp`.
      readOnly: true
      example: rptGt9ju6qP
    created_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was created.
      readOnly: true
      example: '2020-06-01T13:14:54.804Z'
    updated_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was updated.
      readOnly: true
      example: '2020-06-11T13:14:55.201598Z'
    employee_id:
      type: string
      maxLength: 255
      description: >
        This id provided by Fyle to uniquely identify an employee within an
        organization.

        This id is always prefixed with `ou`.
      readOnly: true
      example: outGt9ju6qP
    email:
      type: string
      format: email
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address.

        Must be compliant with <a href="https://www.ietf.org/rfc/rfc822.txt">RFC
        822.</a>
    employee:
      type: object
      description: Details of the employee to whom this object belongs to.
      readOnly: true
      properties:
        user_id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify employees in other organisations.
            It is always prefixed with the string `us`.
            It is unique per email.
          example: usIYTLwzlaGu
        email:
          $ref: '#/components/schemas/email'
        code:
          type: string
          maxLength: 255
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        location:
          type: string
          maxLength: 255
          example: Bangalore Ofc
        level_id:
          type: string
          maxLength: 255
          example: lvlnvJUe9k6Vx
        department_id:
          type: string
          maxLength: 255
          example: dept9in4oIHpdR
        business_unit:
          type: string
          maxLength: 255
          example: Finance ops
          description: >-
            Represents the business unit of the organization to which of the
            employee belongs.
        title:
          type: string
          maxLength: 255
          example: Branch Manager
          description: Represents the title/desgination of the employee.
        mobile:
          type: string
          description: >
            Mobile number of the employee.

            `Given example is a fake number. We don't know who might answer your
            call.`
          example: +1-202-555-0167
        joined_at:
          type: string
          format: date
          example: '2018-10-31'
          description: Date string in YYYY-MM-DD format
        full_name:
          type: string
          maxLength: 255
          example: John Doe
          description: >-
            Represents the full name of the employee. Must be at least 3
            characters.
    objects_report_approvals:
      type: object
      properties:
        report_id:
          $ref: '#/components/schemas/report_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        approver_id:
          allOf:
            - $ref: '#/components/schemas/employee_id'
        state:
          type: string
          enum:
            - APPROVAL_PENDING
            - APPROVAL_DONE
            - APPROVAL_DISABLED
          readOnly: true
        last_updater_id:
          type: string
          readOnly: true
          description: |
            This represents the id of employee who updated this expense.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this expense.
    count:
      description: |
        The total number of objects that can be requested.
      type: integer
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
      default: 200
    limit:
      description: |
        The actual number of objects that are returned in the response.
      type: integer
      example: 100
    foreign_currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.

        Original currency signifies the currency in which the object
        (expense/advance/refund/etc.) was originally created.
      example: INR
    foreign_amount:
      type: number
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 40292.23
    creator_id:
      type: string
      maxLength: 255
      description: >
        An unique ID, generated by Fyle, for identifying the Employee who
        created the object. Once an object is created, the value of this field
        cannot be changed and is immutable.<br>
      example: ou12345Zdfx
      readOnly: true
    project:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          maxLength: 10
          example: '1234'
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
    cost_center:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          example: '4321'
        name:
          type: string
          maxLength: 255
          example: sales & marketing
        code:
          type: string
          example: sm-cc
    category:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          example: '16570'
          description: >
            This id provided by Fyle to identify a category from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces.

            In case if no sub_category is present it is same as name of the
            category.
        system_category:
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
    source_account:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          example: acct0vTfdNQrT
        type:
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_ADVANCE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_ACCOUNT
    report:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify reports in an organisations.
            It is always prefixed with the string `rp`.
            It is unique per report.
          example: rpIYTLwzlaGu
        purpose:
          type: string
        approved_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was approved.

            This field could be null if the Report was not yet approved.
          example: '2020-07-23T09:32:00.933Z'
        reimbursed_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was Reimbursed.

            If the Expense is not reimbursed yet, this could be null. <br>
          example: '2020-07-28T09:32:00.933Z'
        claim_number:
          type: string
          maxLength: 255
        settlement_id:
          type: string
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.

            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the report approved was settled. <br>
          example: '2020-07-23T09:32:00.933Z'
        trip_request_id:
          type: string
          description: An ID of the TripRequest associated with it
    location:
      type: object
      properties:
        city:
          type: string
          example: London
        state:
          type: string
          example: London
        display_name:
          type: string
        country:
          type: string
          example: United Kingdom
        formatted_address:
          type: string
          example: '221 Baker St, Marylebone, London, United Kingdom'
        latitude:
          type: number
          example: 12.971599
        longitude:
          type: number
          example: 77.594566
    perdiem:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          example: '1104'
        name:
          type: string
          maxLength: 255
          example: sales & marketing
        currency:
          type: string
          maxLength: 3
          example: USD
        rate:
          type: integer
          example: 40
    file:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: |
            Id of the file object. Always starts with `fi`.
          example: figo4lgkn2224
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - THUMBNAILx200x200
            - ORIGINAL
            - ENCRYPTED
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: ORIGINAL
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
        download_path:
          type: string
          description: |
            Link to download this file.
            change this to right url later.
          example: /api/files/fiGxWO1vdkW8/download
    custom_properties:
      type: object
      properties:
        name:
          type: string
          description: |
            Name of the custom property.
        value:
          oneOf:
            - type: string
            - type: boolean
            - type: integer
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
          description: >
            The value for the custom properties. This could be a String,
            Boolean, Integer or an Array of Strings. <br>
      example:
        house: gryffindor
    approvals:
      type: object
      description: |
        siginifies all the approvals of a particular object.
      properties:
        approver_id:
          type: string
        state:
          type: string
          enum:
            - APPROVED
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
      example:
        approver_id: oueoblnegf
        state: APPROVED
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      example: orwruogwnngg
    expense_actions:
      type: object
      readOnly: true
      properties:
        can_delete:
          type: boolean
          example: false
        can_edit:
          type: boolean
          example: true
        can_edit_physical_bill:
          type: boolean
          example: true
        can_remove_from_report:
          type: boolean
          example: false
    expenses:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          example: txg3053jg33
          description: >-
            An unique string to identify the Expense. Ignore this field when
            used as part of a POST request to create an Expense.
          readOnly: true
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        spent_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the expense [being] fyled was made. <br>

            This date cannot be in future.
          example: '2020-07-21T17:32:28Z'
        source:
          type: string
          example: SLACK_APP
          description: >
            The name of the client app which is creating the expense.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not passed, source is saved as TPA.
        currency:
          type: string
          maxLength: 3
          example: USD
          description: >
            ISO 4217 currency codes that are usually of three upper case
            letters.

            See "https://www.iban.com/currency-codes" for examples.

            If this field is ignored during a POST call to create/update an
            Expense, the default currency of the organization will be used.

            To use other currency than default currency use `foreign_currency`
            field.
        amount:
          type: number
          description: >
            The amount for which the expense was/will-be fyled.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>

            Note that, when used as part of creating an Expense via POST, the
            actual amount in the Expense, in a subsequent GET call, may get
            changed either because of policies or admin/approvers changing the
            amount.
          example: 1500
        user_amount:
          type: number
          description: >
            The expense amount as claimed by user.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>
          example: 1984.18
        policy_amount:
          type: number
          readOnly: true
          description: >
            The expense amount which is modified by policy.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>
          example: 1500
        admin_amount:
          type: number
          readOnly: true
          description: >
            The expense amount which is modified by admin or approver.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>

            This could be null if admin or approver has not edited your expense.
          example: 0
        tax:
          type: number
          description: Tax amount as setup by your organisation.
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who created this expense.
        purpose:
          type: string
          maxLength: 1024
          description: Justification for the expense.
          example: Team lunch
        project_id:
          type: string
          description: >
            The ID generated by Fyle to uniquely identify the Project, to which
            the Expense belongs. <br>
          example: '1234'
        project:
          $ref: '#/components/schemas/project'
        cost_center_id:
          type: string
          description: >
            The ID generated by Fyle to uniquely identify the CostCenter, to
            which the Expense belongs. <br>
          example: '4321'
        cost_center:
          $ref: '#/components/schemas/cost_center'
        category_id:
          type: string
          description: |
            The unique ID of a Category to which the Expense belongs. <br>
          example: '18'
        category:
          $ref: '#/components/schemas/category'
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
          readOnly: true
        source_account_id:
          type: string
        source_account:
          $ref: '#/components/schemas/source_account'
        invoice_number:
          type: string
          readOnly: true
          description: |
            invoice number from the receipt.
        billable:
          type: boolean
          example: true
          description: This fields marks whether a given expense is billable a not.
        reimbursable:
          type: boolean
          example: true
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        expense_number:
          type: string
          readOnly: true
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        exchange_rate:
          type: number
          description: >
            This field determines at which rate the expenses from foriegn
            currency was converted to home currency.
        report_id:
          type: string
          description: |
            Unique id given by Fyle to identify an Expense Report.
        reported_at:
          type: string
          format: date-time
          readOnly: true
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was submitted via a Report to the
            Approvers.

            If the Expense is not added to a Report yet or if the Report is not
            yet submitted, this could be null.
        report:
          $ref: '#/components/schemas/report'
        physical_bill:
          type: boolean
          readOnly: true
          description: |
            This field indicated whether physical bill was received or not.
          example: true
        physical_bill_at:
          type: string
          readOnly: true
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp indicating when the Expense's physical bill was submitted.

            If the Expense's bill is not required to be submitted, then this
            could be null.
        verified:
          type: boolean
          description: |
            Indicates whether the Expense is verified or not
          readOnly: true
        verified_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was verified.

            If the Expense is not verified yet, this could be null. <br>
          readOnly: true
        vendor:
          type: string
          example: Uber
          maxLength: 255
          description: |
            String denoting the name of the vendor to which the Expense was made
        vendor_id:
          type: string
          example: 24242r
          maxLength: 255
          description: |
            String denoting the id of the vendor to which the Expense was made
        locations:
          description: >
            This field will be present for travel related categories. To add to
            and from location to you travel category related expenses add two
            locations in schema given below.
          type: array
          items:
            $ref: '#/components/schemas/location'
        started_at:
          description: >
            This field is only relevant for travel related categories. This
            represents the onward date.
          type: string
          example: '2019-07-17T00:00:00.000Z'
        ended_at:
          description: >
            This field is only relevant for travel related categories. This
            represents the return date.
          type: string
          example: '2019-07-27T00:00:00.000Z'
        mileage_distance:
          type: number
          description: Actual distance travelled by employee in mileage expenses.
        mileage_calculated_distance:
          type: number
          description: Distance compluted by Fyle in mileage expenses.
        mileage_distance_unit:
          type: string
          enum:
            - KM
            - MILES
        mileage_calculated_amount:
          type: number
          description: Amount compluted by Fyle in mileage expenses.
        mileage_vehicle_type:
          type: string
          description: Type of vehicle used for travel.
        mileage_rate:
          type: number
          description: Rate per km as provided in the Fyle system
        mileage_is_round_trip:
          type: boolean
          description: Flag stating whether this was a round trip or not.
        bus_travel_class:
          description: |
            This field is applicable only for bus category.
          type: string
          example: AC
        train_travel_class:
          description: |
            This field is applicable for only Train category.
          type: string
          example: string
        flight_journey_travel_class:
          description: >
            This field is applicable only for flight category. Can be
            `BUSINESS`, `ECONOMY`, `FIRST_CLASS`
          type: string
          example: ECONOMY
        flight_return_travel_class:
          description: >
            This field is applicable only for flight category. Can be
            `BUSINESS`, `ECONOMY`, `FIRST_CLASS`
          type: string
          example: BUSINESS
        hotel_is_breakfast_provided:
          type: boolean
        per_diem_rate_id:
          type: string
        per_diem_rate:
          $ref: '#/components/schemas/perdiem'
        num_days:
          type: integer
          example: 2
        has_attachments:
          type: boolean
          description: >
            Returns if there are file attachments that the Expense has. Usually
            the image of the receipts are added as attachments to the Expenses.
          readOnly: true
        attachments:
          description: |
            returns reference to files API.
          type: array
          items:
            $ref: '#/components/schemas/file'
        custom_properties:
          type: array
          items:
            $ref: '#/components/schemas/custom_properties'
        is_policy_flagged:
          type: boolean
          readOnly: true
          description: >-
            This field indicates whether policy execution has flagged this
            expenses or not.
          example: false
        is_manual_flagged:
          type: boolean
          readOnly: true
          description: >
            This field indicates whether this expenses was manually flagged by
            approver or finance or admin.
          example: true
        policy_state:
          type: string
          readOnly: true
          enum:
            - FAILED
            - SUCCESS
            - RUNNING
          description: >
            This fields shows policy execution state for this expenses.

            If this field is null then its policy has not yet run on this
            expenses.
        extracted_data:
          type: object
          readOnly: true
        transcribed_data:
          type: object
          readOnly: true
        is_user_review_needed:
          type: boolean
          readOnly: true
        is_mandatory_fields_present:
          type: boolean
          readOnly: true
        is_receipt_required:
          type: boolean
          readOnly: true
        is_holiday_expense:
          type: boolean
          readOnly: true
        risk_state:
          type: string
          readOnly: true
          enum:
            - HIGH_RISK
            - MODERATE_RISK
            - NO_RISK
          example: NO_RISK
        external_id:
          type: string
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity has been already added to Fyle or not.
        split_group_id:
          type: string
        split_group_user_amount:
          type: number
        personal_card_transaction:
          type: object
          readOnly: true
          description: >
            This key contains details about personal card transaction linked to
            this expense.
        corporate_credit_card_transaction:
          type: object
          readOnly: true
          description: >
            This key contains details about corporate card transaction linked to
            this expense.
        expense_approvals:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/approvals'
          example:
            - approver_id: ougelgneget
              state: APPROVED
            - approver_id: ougo3nlwfgg
              state: APPROVAL_PENDING
        last_updater_id:
          type: string
          readOnly: true
          description: |
            This represents the id of employee who updated this expense.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this expense.
        org_id:
          $ref: '#/components/schemas/org_id'
        actions:
          $ref: '#/components/schemas/expense_actions'
    get_expenses:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /approver/expenses
        data:
          type: array
          items:
            $ref: '#/components/schemas/expenses'
    currency:
      type: string
      maxLength: 10
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>
      example: USD
    amount:
      type: integer
      description: |
        Amount value of the object.
      example: 100
    reports:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id provided by Fyle to uniquely identify a Expense report.
            This id is always prefixed with `rp`.
          readOnly: true
          example: rpevetgn3kl
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        submitted_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was submitted to the Approvers.

            If the Report is not yet submitted, this could be null. <br>
          readOnly: true
        purpose:
          type: string
        claim_number:
          type: string
          maxLength: 255
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
        state:
          type: string
        source:
          type: string
        approved_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was approved. This field could be null
            if the Report was not yet approved.
          readOnly: true
        verified:
          type: boolean
          description: |
            Indicates whether the Report is verified or not.
          readOnly: true
        verified_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was verified. If the Report is not
            verified yet, this could be null.
          readOnly: true
        reimbursed_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was Reimbursed. If the Report is not
            reimbursed or submitted yet, this could be null.
          readOnly: true
        settlement_id:
          type: string
          readOnly: true
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.
            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          readOnly: true
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the report was settled. <br>
          example: '2017-07-21T17:32:28Z'
        num_expenses:
          type: integer
        expense_ids:
          type: array
          items:
            type: string
        verification_state:
          type: string
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who created this report.
        trip_request_id:
          type: string
        physical_bill:
          type: boolean
        physical_bill_at:
          type: string
        manual_flag:
          type: boolean
        policy_flag:
          type: boolean
        type:
          type: string
        started_at:
          type: string
        ended_at:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/location'
        report_approvals:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/approvals'
              - type: object
                properties:
                  rank:
                    type: integer
                    example: 1
        org_id:
          $ref: '#/components/schemas/org_id'
    get_reports:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /approver/reports
        data:
          type: array
          items:
            $ref: '#/components/schemas/reports'
    field_name:
      type: string
      description: |
        This specifies the name of the expense field.
      example: Vendor desciption
    column_name:
      type: string
      description: |
        This specifies the name of column to which this expense field mapped to.
      readOnly: true
      example: text_column1
    title:
      type: string
      description: |
        This specifies the title of the expense field.
      example: Vendor desciption
    type:
      type: string
      description: |
        This field specifies the type of the expense field.
      example: TEXT
    options:
      type: array
      items:
        type: string
      description: >
        This specifies the option values of the expense field in case on SELECT
        or MULTI_SELECT type.
      example:
        - Chai
        - Coffee
    default_value:
      type: string
      description: |
        This specifies the default value of the expense fields.
      example: Coffee
    placeholder:
      type: string
      description: |
        This specifies the placeholder of the expense field.
      example: Enter vendor
    category_ids:
      type: array
      items:
        type: integer
      description: >
        This field specifies the org category ids associated with the custom
        property.
      example:
        - 16570
    enabled:
      type: boolean
      description: |
        This field specifies if the object is enabled or not.
      example: true
    mandatory:
      type: boolean
      description: |
        This specifies if the expense field is mandatory or not.
      example: true
    expense_fields:
      type: object
      properties:
        id:
          type: string
          description: |
            This id is provided by Fyle to identify a particular expense field.
          example: ef3ejnl335g
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        seq:
          type: integer
          example: 1
        field_name:
          $ref: '#/components/schemas/field_name'
        column_name:
          $ref: '#/components/schemas/column_name'
        title:
          $ref: '#/components/schemas/title'
        type:
          $ref: '#/components/schemas/type'
        options:
          $ref: '#/components/schemas/options'
        default_value:
          $ref: '#/components/schemas/default_value'
        placeholder:
          $ref: '#/components/schemas/placeholder'
        category_ids:
          $ref: '#/components/schemas/category_ids'
        is_enabled:
          $ref: '#/components/schemas/enabled'
        mandatory:
          $ref: '#/components/schemas/mandatory'
        org_id:
          $ref: '#/components/schemas/org_id'
    get_expense_fields:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /approver/expense_fields
        data:
          type: array
          items:
            $ref: '#/components/schemas/expense_fields'
  parameters:
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        created_at=gte.2020-06-01T00:00:00.000Z filters all employees created on
        or after 1st Jun 2020.<br>

        created_at=gte.2020-06-01T00:00:00.000Z&created_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `created` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    order:
      in: query
      name: order
      description: |
        use comma separated column names for sorting the results.
        For sorting in descending order, use `column_name.desc`
      schema:
        type: string
        example: 'updated_at.desc,id'
        default: 'updated_at.desc,id'
    offset:
      in: query
      name: offest
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 100
        default: 200
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z filters all employees updated on
        or after 1st Jun 2020.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z&updated_at=lt.2020-07-01T00:00:00.000Z
        filters all employees `updated` in the month of Jun 2020.<br>
      schema:
        type: string
        example: 'gte.2020-06-01T00:00:00.000Z'
    approved_at:
      in: query
      name: approved_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        approved_at=gte.2020-06-01T00:00:00.000Z filters all objects approved on
        or after 1st Jun 2020.<br>

        approved_at=gte.2020-06-01T00:00:00.000Z&approved_at=lt.2020-07-01T00:00:00.000Z
        filters all objects `approved` in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          approved_at=gte.2020-06-01T00:00:00.000Z&approved_at=lt.2020-07-01T00:00:00.000Z
    state:
      in: query
      name: state
      description: >
        Accepted states are DRAFT, APPROVER_INQUIRY, APPROVER_PENDING, APPROVED,
        PAYMENT_PENDING, PAYMENT_PROCESSING, PAID.<br>

        Supported operators are `eq`, `like`, `in`.<br>
      schema:
        type: string
        example: in.(COMPLETE)
    settled_at:
      in: query
      name: settled_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z filters all reports settled on
        or after 1st Jun 2020.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
        filters all reports settled in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
    reimbursed_at:
      in: query
      name: reimbursed_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        reimbursed_at=gte.2020-06-01T00:00:00.000Z filters all reports
        reimbursed on or after 1st Jun 2020.<br>

        reimbursed_at=gte.2020-06-01T00:00:00.000Z&reimbursed_at=lt.2020-07-01T00:00:00.000Z
        filters all reports reimbursed in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          reimbursed_at=gte.2020-06-01T00:00:00.000Z&reimbursed_at=lt.2020-07-01T00:00:00.000Z
    is_enabled:
      in: query
      name: is_enabled
      description: |
        This param is used to filer records by
        Supported operators are `eq`.<br>
      schema:
        type: string
        example: eq.true
tags:
  - name: Expenses
    description: |
      This API gives you access to Expenses data which are reported to you.
  - name: Expense Fields
    description: |
      This API gives you access to your organisation's Expense Fields data.
  - name: Reports
    description: >
      These API gives you access to Expense Reports data which are submitted to
      you.
  - name: Reports Approvals
    description: >
      These API gives you access view or approve Reports which are submitted to
      you.
paths:
  /approver/report_approvals:
    post:
      tags:
        - Reports Approvals
      summary: Approve reports
      description: |
        It approve expense reports.
      operationId: post-report-approvals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/report_approvals'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /approver/report_approvals
                  data:
                    $ref: '#/components/schemas/objects_report_approvals'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /approver/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      operationId: GetExpenses
      parameters:
        - $ref: '#/components/parameters/created_at'
        - in: query
          name: invoice_number
          description: |
            Supported operators are `eq`, `in`.<br>
          schema:
            type: string
            example: CRN4684556772
        - in: query
          name: source_account->type
          description: |
            Supported operators are `eq`, `in`.<br>
            source_account.type=eq.PERSONAL_ACCOUNT
          schema:
            type: string
            example: eq.PERSONAL_ACCOUNT
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_expenses'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: get-reports
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/approved_at'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/settled_at'
        - $ref: '#/components/parameters/reimbursed_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reports'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /approver/expense_fields:
    get:
      tags:
        - Expense Fields
      summary: List expense fields
      description: |
        Gives the list of all expense fields based on query parameters.
      operationId: get-expense-fields
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/is_enabled'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_expense_fields'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
